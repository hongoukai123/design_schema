《建造者模式》
1.定义
    建造模式是对象的创建模式。建造模式可以将一个产品的内部表象与产品的生产过程分割开来，从而可以使一个建造过程生成具有不同的内部表象
的产品对象。
2.产品的内部表象
    一个产品常有不同的组成成分作为产品的零件，这些零件有可能是对象，也有可能不是对象，他们通常就叫做产品的内部表象。不同的产品可以有
不同的内部表象，也就是不同的零件。使用建造模式可以使客户端不需要知道所生成的产品有哪些零件，每个产品的对应零件彼此有何不同，是怎么建
造出来的，以及怎么组成产品。
3.对象性质的建造
    有些情况下，一个对象会有一些重要的性质，在它们没有恰当的值之前，对象不能作为一个完整的产品使用。比如，一个电子邮件有发件人地址、
收件人地址、主题、内容、附录等部分，而在最起码的收件人地址得到赋值之前，这个电子邮件不能发送。
    有些情况下，一个对象的一些性质必须按照某个顺序赋值才有意义。在某个性质没有赋值之前，另一个性质则无法赋值。这些情况使得性质本身的
建造涉及到复杂的商业逻辑。这个时候，此对象相当于一个有带建造的产品，而对象的这些性质相当于产品的零件，建造产品的过程是建造零件的过程
由于建造零件的过程很复杂，因此，这些零件的建造过程往往被“外部化”到另一个称作建造者的对象里，建造者对象返还给客户端的是一个全部零件都
建造完毕的产品对象。
    建造模式利用一个导演者对象和具体建造者对象一个个的建造出所有的零件，从而建造出完整的产品对象。建造者模式将产品的结构和产品的零件
的建造过程对客户端隐藏起来，把建造过程进行指挥的责任和具体建造者零件的责任分割开来，达到责任划分和封装的目的。
4.建造模式结构
    1>产品中带有零件属性的封装
        <1>创建产品（对象类）
        <2>定义产品的零件（对象的属性）
        <3>封装（进行getter、setter）
    2>抽象建造者
        <1>创建抽象接口（规范产品对象的各个组成成分的建造）
        <2>创建建造方法（一般产品有多少零件（属性）就创建多少个建造方法）
        <3>创建返回结构方法（返回产品对象）
    3>具体建造者
        <1>创建具体建造者对象
        <2>实现抽象建造者对象
        <3>创建产品实例（给产品零件赋值（调用产品封装类，将其属性值实例化））
        <4>提供产品实例（创建返回实例后的产品对象）
    4>导演者
        <1>创建导演者对象
        <2>定义抽象建造者
        <3>构造方法传递抽象建造者对象
        <4>创建负责调用产品零件建造的方法
    5>产品
        <1>创建客户端类
        <2>创建导演者和具体建造者对象
        <3>客户端把具体建造者对象交给导演者
        <4>开始创建产品
        <5>把产品返还给客户端